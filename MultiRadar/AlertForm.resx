<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAMAAADXqc3KAAAABGdBTUEAALGPC/xhBQAAAdpQTFRFRU5P
        SFRUQ0tMOTw8SVNUR1JTRU9QOT09R1JSSFNVRlBRR1BRQUlKRExNODs7QEZHRlBQPUJDPkRERk9QRk9R
        PEBARk5PP0VFOj0+PEFBQUdHRlFSOj4+SFJUOz8/Oz4+Ojw8SVRUPUNDP0RERE1NQklKRE1OQktLQ0pK
        PkJCQEZGQ0pLQ0xNPkFCQklJQEVGPUBAQERFODw8RlBSR1FTSVNVQUdIREtMOj09SFNTQkhIQkhJP0ZG
        PEFCPkJDO0BARU5QPD4+QkpKPUBBQkpLRlFRQ0tLQEdIPT9AOz0+PUFBPkNEQEdHRUxNQUZHP0VGRE5P
        RU5OPEBBP0NDR1NUOzw8Ojo7Oj4/Q0lKPD4/RU9PPkVFPUFCQUhIOzw9RExMRU1NOz9APkRFP0RFQUhJ
        RExORU1OOTs7QUVGPUJCQ0hJREtLOjw7PEJCQkhKP0ZHPD9ARE5OODs8PkBBOTw7OT08Rk9PQkdJOjs8
        RlFTQ01NQklLOzw7PT8/Oz4/QEhJOz09PD8/RUxMSFJSPkJEPD0+Q0xMP0NEQUlJQEVFRlJSR1JURVBR
        PD09RU9RR1NTQUhKQkdHODw7QEhIR1BSPkNDR1FROjs7R1FSSFJTSFRVSFNUSVRV////BJR5VQAAABl0
        RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAH7SURBVChTZZDlVxtREMUn2c1uko27EQ8x
        QoS4NlCKQ7HibnV3o+5uK+/1f+1LywfO6f02v3Nnzr0DwVWrj6V03255vDNN05U1jTzMqJVdNDRanjKl
        o6iRltNo0q89eHWNUQsirQKvp5zT5VhHqxG013f7e7qX+5RIJmHwsDcPKHbBuhq069+c7DnNEE7LMAY2
        d51ifVuXxuzjX6IbwLhFJEkY03CgoxyPrQ3T1NDl6P2/XIVliBaB8AWr0WQvRuRhMAgKwiWMFAL4Hd6Z
        c6apoia6B5Z35A4mC+IPA5S9TuN2/btG3n1CLVRIHKmAnvdZALacxp36YT/hg8IcwlhCovKXeXoCnMaV
        3/9peiIJwW390XRMpWQNVsZ3Sa0PbgUirbAkCtztzVKsNglDmuiR7Zju6HdAI9fCp8HPSAqoSC3BYAuf
        6i1OZptAuOVep5aMxBcsoJUvfk2EmgNA4ufnOvdVXf/8EdfZ1/GBJWDU7vd0AGNEuNmmTZ53pUPxTHsE
        1MrOGwqyipIzw7NYrys9lso89fkhryB1iT/PLcMG4dkXqczSRz8PnS9ICCk4Zl8bqybezqaG2+vzd3kg
        3wygisCZ90uLNX1odnS4/cTP82cASwGEBANsyiPVROjn6FXf+kXCyUaBVgicbe9CpJrOxm88ejn/kOd5
        nv8Du+uyWJbI6OUAAAAASUVORK5CYII=
</value>
  </data>
</root>