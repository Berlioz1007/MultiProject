<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAMAAADXqc3KAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAHaUExURUVOT0hUVENLTDk8PElTVEdSU0VPUDk9PUdSUkhTVUZQUUdQUUFJSkRMTTg7O0BGR0ZQ
        UD1CQz5EREZPUEZPUTxAQEZOTz9FRTo9PjxBQUFHR0ZRUjo+PkhSVDs/Pzs+Pjo8PElUVD1DQz9ERERN
        TUJJSkRNTkJLS0NKSj5CQkBGRkNKS0NMTT5BQkJJSUBFRj1AQEBERTg8PEZQUkdRU0lTVUFHSERLTDo9
        PUhTU0JISEJIST9GRjxBQj5CQztAQEVOUDw+PkJKSj1AQUJKS0ZRUUNLS0BHSD0/QDs9Pj1BQT5DREBH
        R0VMTUFGRz9FRkROT0VOTjxAQT9DQ0dTVDs8PDo6Ozo+P0NJSjw+P0VPTz5FRT1BQkFISDs8PURMTEVN
        TTs/QD5ERT9ERUFISURMTkVNTjk7O0FFRj1CQkNISURLSzo8OzxCQkJISj9GRzw/QEROTjg7PD5AQTk8
        Ozk9PEZPT0JHSTo7PEZRU0NNTUJJSzs8Oz0/Pzs+P0BISTs9PTw/P0VMTEhSUj5CRDw9PkNMTD9DREFJ
        SUBFRUZSUkdSVEVQUTw9PUVPUUdTU0FISkJHRzg8O0BISEdQUj5DQ0dRUTo7O0dRUkhSU0hUVUhTVElU
        Vf///wSUeVUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAB+0lEQVQoU2WQ5Vcb
        URDFJ9nNbpKNuxEPMUKEuDZQikOx4m51d6Pubivv9X/tS8sHzun9Nr9zZ869A8FVq4+ldN9uebwzTdOV
        NY08zKiVXTQ0Wp4ypaOokZbTaNKvPXh1jVELIq0Cr6ec0+VYR6sRtNd3+3u6l/uUSCZh8LA3Dyh2wboa
        tOvfnOw5zRBOyzAGNnedYn1bl8bs41+iG8C4RSRJGNNwoKMcj60N09TQ5ej9v1yFZYgWgfAFq9FkL0bk
        YTAICsIljBQC+B3emXOmqaImugeWd+QOJgviDwOUvU7jdv27Rt59Qi1USBypgJ73WQC2nMad+mE/4YPC
        HMJYQqLyl3l6ApzGld//aXoiCcFt/dF0TKVkDVbGd0mtD24FIq2wJArc7c1SrDYJQ5roke2Y7uh3QCPX
        wqfBz0gKqEgtwWALn+otTmabQLjlXqeWjMQXLKCVL35NhJoDQOLn5zr3VV3//BHX2dfxgSVg1O73dABj
        RLjZpk2ed6VD8Ux7BNTKzhsKsoqSM8OzWK8rPZbKPPX5Ia8gdYk/zy3DBuHZF6nM0kc/D50vSAgpOGZf
        G6sm3s6mhtvr83d5IN8MoIrAmfdLizV9aHZ0uP3Ez/NnAEsBhAQDbMoj1UTo5+hV3/pFwslGgVYInG3v
        QqSazsZvPHo5/5DneZ7/A7vrsliWyOjlAAAAAElFTkSuQmCC
</value>
  </data>
</root>